apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-nginx-service-label
  name: kafka-nginx-service-name
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
      name: kafka000
    - protocol: TCP
      port: 9001
      targetPort: 9001
      name: kafka001
    - protocol: TCP
      port: 9002
      targetPort: 9002
      name: kafka002
  selector:
    app: kafka-nginx-pod-label
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-zookeeper-service-label
  name: kafka-zookeeper-service-name
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - protocol: TCP
      port: 2181
      targetPort: 2181
      name: zoo  
  selector:
    app: kafka-zookeeper-pod-label
---
apiVersion: v1
kind: Pod
metadata:
  name: kafka-zookeeper-pod-name
  labels:
    app: kafka-zookeeper-pod-label
spec:
  containers:
  - name: kafka-zookeeper-container
    image: wurstmeister/zookeeper
    ports:
    - name: zoo-port
      containerPort: 2181
---
apiVersion: v1
kind: Pod
metadata:
  name: kafka-nginx-pod-name
  labels:
    app: kafka-nginx-pod-label
spec:
  containers:
  - name: kafka-nginx-container
    image: nginx:latest
    ports:
    - name: kafka-port
      containerPort: 9001
    volumeMounts:
    - name: "config"
      mountPath: "/etc/nginx/nginx.conf"
      subPath: "nginx.conf"
  volumes:
    - name: "config"
      configMap:
        name: "config01"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-nginx-map
data:
  kafka-ss-name-0: "9000"
  kafka-ss-name-1: "9001"
  kafka-ss-name-2: "9002"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ss-service-name
  labels:
    app: kafka-s-ss-label
spec:
  ports:
  - port: 9000
    name: kafka-000
  - port: 9001
    name: kafka-001
  - port: 9002
    name: kafka-002
  - port: 9003
    name: kafka-003
  clusterIP: None
  selector:
    app: kafka-template-label
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-ss-name
  labels:
    app: kafka-ss-label
spec:
  serviceName: kafka-ss-service-name
  replicas: 3
  selector:
    matchLabels:
      app: kafka-template-label
  template:
    metadata:
      labels:
        app: kafka-template-label
    spec:
      terminationGracePeriodSeconds: 20
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - kafka-ss-label
              topologyKey: "kubernetes.io/hostname" 
      containers:
      - name: kafka-container
        image: stanislavko2/cerebro_w_kafka:2.3.0
        imagePullPolicy: Always
        ports:
        - containerPort: 22
          name: ssh
        - containerPort: 9000
          name: broker-node-000
        - containerPort: 9001
          name: broker-node-001
        - containerPort: 9002
          name: broker-node-002
        - containerPort: 9092
          name: broker-node-092
        volumeMounts:
        - name: "config"
          mountPath: "/etc/kafka_server_jaas.conf"
          subPath: "kafka_server_jaas.conf"
        envFrom:
          - configMapRef:
              name: config-nginx-map
        env:
          - name: MY_METADATA_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: STAS_DELAY
            value: "120"
          - name: MY_DOMAIN
            value: "do-kafka.mydomain.com"
          - name: KAFKA_CREATE_TOPICS
            value: "Topic1:3:1,Topic2:3:1"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "kafka-zookeeper-service-name.default.svc.cluster.local:2181"
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "INSIDE://$(MY_POD_IP):9092,OUTSIDE://$(MY_DOMAIN):MYPORTW"
          - name: KAFKA_LISTENERS
            value: "INSIDE://$(MY_POD_IP):9092,OUTSIDE://$(MY_DOMAIN):MYPORTW"
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "INSIDE:PLAINTEXT,OUTSIDE:SASL_PLAINTEXT"
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: "INSIDE"
          - name: KAFKA_OPTS
            value: "-Djava.security.auth.login.config=/etc/kafka_server_jaas.conf"
          - name: KAFKA_SASL_ENABLED_MECHANISMS
            value: "PLAIN"
          - name: KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL
            value: "PLAIN"
      restartPolicy: Always
      volumes:
        - name: "config"
          configMap:
            name: "config01"
